server.port=8082
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=12345
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql = false
spring.jpa.properties.hibernate.hbm2ddl.auto = validate
logging.level.liquibase=DEBUG

spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml

bot_token=1472867697:AAENNTbXf7ZEX8IVZg--IhJz664g9XMfUZw


# application.properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


spring.config.import=application-secrets.properties

logging.level.org.springframework.security=DEBUG
logging.level.graphql=DEBUG
logging.level.org.springframework.web=DEBUG
# GraphQL
graphql.tools.schema-location-pattern=**/*.graphqls

spring.graphql.graphiql.enabled=true

# ?????????? ??????????? ?? ????? ??????????
spring.thymeleaf.cache=false  

spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


